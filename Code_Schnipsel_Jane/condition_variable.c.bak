#include <pthread.h>
#include <stdio.h>
#include <unistd.h>


/**
 * Variable, welche einen Mutex reprÃ¤sentiert.
 * Jede PThread-Condition MUSS durch eine Mutex beschÃ¼tzt werden!!!
 */
pthread_mutex_t mutex;

/**
 * Variable, welche die Condition reprÃ¤sentiert.
 */
pthread_cond_t condition;


/**
 * ReprÃ¤sentiert den Thread, welcher auf das Eintreten eines Ereignisses wartet
 */
void* waiting_thread(void* arg) {
	printf("Waiting Thread: Warte auf Ereignis\n");

	// Bevor man Operationen auf Conditions ausfÃ¼hrt, muss der dazugehÃ¶rige Mutex gesperrt werden
	pthread_mutex_lock(&mutex);
	// Warte auf das Eintreten des Ereignisses
	// Der Ã¼bergebene Mutex wird wÃ¤hrend des Wartens automatisch entsperrt
	pthread_cond_wait(&condition, &mutex);
	// Nach Beendigung der Condition-Operation kann der Mutex wieder entsperrt werden
	pthread_mutex_unlock(&mutex);

	printf("Waiting Thread: Ereignis ist eingetreten\n");
	return NULL;
}


/**
 * ReprÃ¤sentiert den Thread, welcher das Eintreten des Ereignisses dem anderen Thread mitteilt
 */
void* signaling_thread(void* arg) {
	printf("Signaling Thread: Warte 4 Sekunden\n");
	sleep(4);
	printf("Signaling Thread: Teile das Eintreten der Bedingung mit\n");

	// Bevor man Operationen auf Conditions ausfÃ¼hrt, muss der dazugehÃ¶rige Mutex gesperrt werden
	pthread_mutex_lock(&mutex);
	// Teile dem anderen Thread das Eintreten des Ereignisses mit
	pthread_cond_signal(&condition);
	// Nach Beendigung der Condition-Operation kann der Mutex wieder entsperrt werden
	pthread_mutex_unlock(&mutex);

	printf("Signaling Thread: Das Eintreten der Bedingung wurde mitgeteilt\n");
	return NULL;
}


int main() {
	// Reserviere Speicher fÃ¼r die Thread-Handles
	pthread_t myThreads[2];

	// Initialisiere den Mutex
	// 1. Argument: Zeiger auf die Mutex Variable
	// 2. Argument: Zeiger auf die Attribut-Variable (NULL bedeutet Default Attribute)
	pthread_mutex_init(&mutex, NULL);

	// Initialisiere die Condition Variable
	// 1. Argument: Zeiger auf die Condition Variable
	// 2. Argument: Zeiger auf die Attribut-Variable (NULL bedeutet Default Attribute)
	pthread_cond_init(&condition, NULL);

	// Erzeuge den "Waiting"-Thread
	pthread_create(&myThreads[0], NULL, &waiting_thread, NULL);

	// Erzeuge den "Signaling"-Thread
	pthread_create(&myThreads[1], NULL, &signaling_thread, NULL);

	// Warte auf die Beendigung aller Threads
	for (int i = 0; i < 2; i++) {
		pthread_join(myThreads[i], NULL);
		printf("Thread %d wurde beendet\n", i);
	}

	// Gebe den Mutex wieder frei
	pthread_mutex_destroy(&mutex);
	// Gebe die Condition wieder frei
	pthread_mutex_destroy(&mutex);

	return 0;
}
